<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewsVC="clr-namespace:Smartest.Views.VehicleConfiguration"
                    xmlns:vmVC="clr-namespace:Smartest.ViewModels.VehicleConfigurationVM"
					>

    <!--xmlns:conv="clr-namespace:Smartest.Auxiliary.Converters" <conv:CommentsConverter x:Key="CommentsConverter" />-->

    <!--   Here I'm binding ViewModels to Views, so the content         -->
	<!--   controll will know what to display (on the view) when        -->
    <!--   it encounters a ViewModel                                    -->
	<!--<DataTemplate DataType="{x:Type vm:About_ViewModel}">
		<views:About_View />
	</DataTemplate>-->

	<!--<DataTemplate DataType="{x:Type vm:Random_ViewModel}">
		<views:Random_View></views:Random_View>
	</DataTemplate>-->

    <DataTemplate DataType="{x:Type vmVC:SensorViewModel}">
        <viewsVC:SensorView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmVC:ConfigurationViewModel}">
        <viewsVC:ConfigurationView/>
    </DataTemplate>

    <!--<DataTemplate DataType="{x:Type vm:ValidationsConvertes_ViewModel}">
		<views:ValidationsConvertes_View/>
	</DataTemplate-->


	<!--   You can of course simply use the dataTemplate to directly manipulate   -->
	<!--   how things will look, like in the following example:                   -->

<!--    
	
	<DataTemplate DataType="{x:Type model:SomeClass}">
		<Border Background="Navy"  Margin="2" Padding="2">
			<StackPanel Orientation="Horizontal">

				<TextBlock Text="{Binding Date, StringFormat=dd-MM-yyyy}" Width="80"/>
				<TextBlock Text="{Binding Name}" FontWeight="Bold" Width="130"/>
				<TextBlock Text="{Binding Age}" Width="60" Foreground="LightSteelBlue"/>
				<TextBlock Text="{Binding Comment, Converter={StaticResource CommentsConverter}}" />

			</StackPanel>
			
		</Border>
	</DataTemplate>
	
-->


</ResourceDictionary>